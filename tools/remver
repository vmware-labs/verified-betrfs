#!/usr/bin/python3
import sys
import tempfile
import os
import shutil

def usage(msg):
    sys.stderr.write(msg + "\n")
    sys.stderr.write("Usage: %s --cmd <blar>* --stdout <path> --transfer <blah>*\n" % sys.argv[0])
    sys.exit(-1)

class RemVer:
    def __init__(self):
        self.parseArgs()

    def parseArgs(self):
        key = None
        KNOWN_KEYS = ["cmd", "stdout", "transfer"]
        buckets = {}
        for arg in sys.argv[1:]:
            if arg.startswith("--"):
                key = arg[2:]
                if key not in KNOWN_KEYS:
                    usage("Unknown arg '%s'" % arg)
            elif key==None:
                usage("Unknown arg '%s'" % arg)
            else:
                if key not in buckets:
                    buckets[key] = []
                buckets[key].append(arg)
        if len(buckets["stdout"]) != 1:
            usage("Expected exactly one value for --stdout")
        self.buckets = buckets

    def transfer(self):
        tmpdir = tempfile.mkdtemp(".remver")
        print("look in %s" % tmpdir)
        for srcfile in self.buckets['transfer']:
            if os.path.isdir(srcfile):
                # We'll make the dir if we need it.
                continue
            dstfile = os.path.join(tmpdir, srcfile)
            assert os.path.abspath(dstfile).startswith(tmpdir)  # no ..s
            try:
                print("makedirs %s for dest %s" % (os.path.dirname(dstfile), dstfile))
                os.makedirs(os.path.dirname(dstfile))
            except FileExistsError:
                pass
            shutil.copyfile(srcfile, dstfile)

    def main(self):
        for key in self.buckets:
            print("Got %d args in bucket %s" % (len(self.buckets[key]), key))
        self.transfer()

RemVer().main()
